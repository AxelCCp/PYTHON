import pickle

class Persona:

    def __init__(self, nombre, genero, edad):
        self.nombre = nombre
        self.genero = genero
        self.edad = edad
        print("Se ha creado una nueva persona con el nombre de ", self.nombre)

    def __str__(self):
        return "{} {} {}".format(self.nombre, self.genero, self.edad)    


class ListaPersonas:

    personas = []

    def __init__(self):
        
        #lista de personas va a ser igual a la información que va a haber en el fichero externo. este fichero va a ir guardando info de manera permanente.
                                                #AB+ : agregar información binaria                                           
        listaDePersonas = open("D8_41_ficheroExterno", "ab+")
        #desplaza el cursor al principio para poder leer a la persona.
        listaDePersonas.seek(0)

        #si es primera vez q se carga el fichero, no van a haber personas almacenadas y esta línea va a dar error, entonces se usa try catch
        try:
            self.personas = pickle.load(listaDePersonas)
            print("Se cargaron {} personas del fichero externo".format(len(self.personas)))
        except:
            print("el fichero está vacío")
        finally:
            listaDePersonas.close()
            del(listaDePersonas)

    def agregarPersonas(self,p):
        self.personas.append(p)
        self.guardarPersonasEnFicheroExterno()
    
    def mostrarPersonas(self):
        for p in self.personas:
            print(p)

    def guardarPersonasEnFicheroExterno(self):
                                                     #escribir bytes.       
        listaPersonas = open("D8_41_ficheroExterno", "wb")
        #se hace el volcado de informacion
        pickle.dump(self.personas, listaPersonas)
        listaPersonas.close()
        del(listaPersonas)

    def mostrarInfoFicheroExterno(self):
        print("La informacion del fichero externo es la siguiente:") 
        for p in self.personas:
            print(p)


miLista = ListaPersonas()


persona = Persona("Sandra", "Femenino", 29)
miLista.agregarPersonas(persona)

miLista.mostrarInfoFicheroExterno()



#p = Persona("Antonio", "Masculino", 39)
#miLista.agregarPersonas(p)

#p = Persona("Isabel", "Femenino", 19)
#miLista.agregarPersonas(p)




